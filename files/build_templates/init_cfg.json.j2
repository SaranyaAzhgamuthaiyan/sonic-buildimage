{
    "DEVICE_METADATA": {
        "localhost": {
            "buffer_model": {% if default_buffer_model == "dynamic" %}"dynamic"{% else %}"traditional"{% endif %},
            "default_bgp_status": {% if shutdown_bgp_on_start == "y" %}"down"{% else %}"up"{% endif %},
            "default_pfcwd_status": {% if enable_pfcwd_on_start == "y" %}"enable"{% else %}"disable"{% endif %}
        }
    },
{%- set features = [("bgp", "enabled", false, "enabled"),
                   ("database", "always_enabled", false, "always_enabled"),
                   ("lldp", "enabled", false, "enabled"),
                   ("pmon", "enabled", false, "enabled"),
                   ("swss", "enabled", false, "enabled"),
                   ("syncd", "enabled", false, "enabled")] %}
{%- if sonic_asic_platform == "vs" %}{% do features.append(("gbsyncd", "disabled", false, "enabled")) %}{% endif %}
{%- if include_mgmt_framework == "y" %}{% do features.append(("mgmt-framework", "enabled", true, "enabled")) %}{% endif %}
{%- if include_system_telemetry == "y" %}{% do features.append(("telemetry", "enabled", true, "enabled")) %}{% endif %}
{%- if include_snmp == "y" %}{% do features.append(("snmp", "disabled", true, "enabled")) %}{% endif %}
    "FEATURE": {
{# has_timer field if set, will start the feature systemd .timer unit instead of .service unit #}
{%- for feature, state, has_timer, autorestart in features %}
        "{{feature}}": {
            "state": "{{state}}",
            "has_timer" : {{has_timer | lower()}},
            "has_global_scope": {% if feature + '.service' in installer_services.split(' ') %}true{% else %}false{% endif %},
            "has_per_asic_scope": {% if feature + '@.service' in installer_services.split(' ') %}true{% else %}false{% endif %},
            "auto_restart": "{{autorestart}}",
            "high_mem_alert": "disabled"
        }{% if not loop.last %},{% endif -%}
{% endfor %}
    }
}
